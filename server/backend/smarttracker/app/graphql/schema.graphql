schema {
    query: Query
    mutation: Mutation
}

type User {
    id: ID!
    username: String!
    email: String!
    service: String!
    role: String!
    createdAt: String!
    updatedAt: String!

    timeEntries: [TimeEntry!]!
}

type Project {
    id: ID!
    name: String!
    description: String
    createdAt: String!
    updatedAt: String!

    timeEntries: [TimeEntry!]!
}

type TimeEntry {
    id: ID!
    description: String
    startTime: String!
    endTime: String!
    createdAt: String!
    updatedAt: String!

    user: User!
    project: Project!
}

type Query {
    user(id: ID!): User
    users: [User]
    project(id: ID!): Project
    projects: [Project!]!
    timeEntry(id: ID!): TimeEntry
    timeEntries: [TimeEntry!]!
    timeEntriesByProject(projectId: ID!): [TimeEntry!]!
}

type Mutation {
    createUser(username: String!, email: String!, password: String!, service: String!, role: String): User!
    updateUser(id: ID!, username: String, email: String, service: String, role: String): [Int!]!
    deleteUser(id: ID!): Int!

    createProject(name: String!, description: String): Project!
    updateProject(id: ID!, name: String, description: String): [Int!]!
    deleteProject(id: ID!): Int!

    createTimeEntry(description: String!, startTime: String!, endTime: String!, userId: ID!, projectId: ID!): TimeEntry!
    updateTimeEntry(id: ID!, description: String, startTime: String, endTime: String, userId: ID, projectId: ID): [Int!]!
    deleteTimeEntry(id: ID!): Int!
}